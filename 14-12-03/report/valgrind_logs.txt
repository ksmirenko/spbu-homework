// 1581 digit number, {a a = -}
$ valgrind ./launch.l test10.txt test10_student.txt
==18758== Memcheck, a memory error detector
==18758== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==18758== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==18758== Command: ./launch.l test10.txt test10_student.txt
==18758== 
==18758== 
==18758== HEAP SUMMARY:
==18758==     in use at exit: 12,624 bytes in 1,578 blocks
==18758==   total heap usage: 37,972 allocs, 36,394 frees, 455,976 bytes allocated
==18758== 
==18758== LEAK SUMMARY:
==18758==    definitely lost: 12,624 bytes in 1,578 blocks
==18758==    indirectly lost: 0 bytes in 0 blocks
==18758==      possibly lost: 0 bytes in 0 blocks
==18758==    still reachable: 0 bytes in 0 blocks
==18758==         suppressed: 0 bytes in 0 blocks
==18758== Rerun with --leak-check=full to see details of leaked memory
==18758== 
==18758== For counts of detected and suppressed errors, rerun with: -v
==18758== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)

// 2 digit number, {a a = -}
$ valgrind ./launch.l test.in test.out
==19025== Memcheck, a memory error detector
==19025== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==19025== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==19025== Command: ./launch.l test.in test.out
==19025== 
==19025== 
==19025== HEAP SUMMARY:
==19025==     in use at exit: 0 bytes in 0 blocks
==19025==   total heap usage: 100 allocs, 100 frees, 1,512 bytes allocated
==19025== 
==19025== All heap blocks were freed -- no leaks are possible
==19025== 
==19025== For counts of detected and suppressed errors, rerun with: -v
==19025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


// 3 digit numbers, differ only in the least significant digit, subtracting
// leaks only when subtracting digits, not whent '='
$ valgrind ./launch.l test.in test.out
==19098== Memcheck, a memory error detector
==19098== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==19098== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==19098== Command: ./launch.l test.in test.out
==19098== 
==19098== 
==19098== HEAP SUMMARY:
==19098==     in use at exit: 8 bytes in 1 blocks
==19098==   total heap usage: 124 allocs, 123 frees, 1,800 bytes allocated
==19098== 
==19098== LEAK SUMMARY:
==19098==    definitely lost: 8 bytes in 1 blocks
==19098==    indirectly lost: 0 bytes in 0 blocks
==19098==      possibly lost: 0 bytes in 0 blocks
==19098==    still reachable: 0 bytes in 0 blocks
==19098==         suppressed: 0 bytes in 0 blocks
==19098== Rerun with --leak-check=full to see details of leaked memory
==19098== 
==19098== For counts of detected and suppressed errors, rerun with: -v
==19098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)



// deleting leading zeroes (they are in the head for {result} is reverted)
SlistNode *curHead = result->head;
while ((result->head->next != NULL) && !(*(int*)result->head->val)) {
    curHead = result->head;
    result->head = result->head->next;
    // freeing curHead
    if(result->freeFunc) {
	    result->freeFunc(curHead->val);
    }
    free(curHead->val); // THIS ONE
    free(curHead);
}

$ valgrind --leak-check=full ./launch.l test10.txt test10_student.txt
==20013== Memcheck, a memory error detector
==20013== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==20013== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==20013== Command: ./launch.l test10.txt test10_student.txt
==20013== 
==20013== 
==20013== HEAP SUMMARY:
==20013==     in use at exit: 0 bytes in 0 blocks
==20013==   total heap usage: 37,972 allocs, 37,972 frees, 455,976 bytes allocated
==20013== 
==20013== All heap blocks were freed -- no leaks are possible
==20013== 
==20013== For counts of detected and suppressed errors, rerun with: -v
==20013== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)

